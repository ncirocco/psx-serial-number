package psxserialnumber

import (
	"testing"
)

func TestFindSerial(t *testing.T) {
	value := []byte{}
	want := "SLUS_014.70"

	serial := findSerial(string(value))

	if serial != want {
		t.Errorf("Serial is incorrect, got: %s, want: %s.", serial, want)
	}
}

func TestNormalizeSerial(t *testing.T) {
	testCases := map[string]string{
		"LSP_9071.27": "907127",
		"LSP_0101.50": "LSP-010150-",
		"LSP_9031.74": "LSP90317401",
		"SCUS_941.02": "SCUS-94102",
		"SCUS_941.56": "SCUS_94156",
		"SCUS_943.00": "SCUS-943.00",
		"SCUS_941.03": "SCUS_941.03",
		"SLUS_014.44": "SLUS-014.44",
		"SLUS_012.06": "SLUSP012.06",
		"SLUS_002.20": "SLUS_00.220",
		"SLUS_000.17": "SLUS_000176",
	}

	for expected, value := range testCases {
		normalized := normalizeSerial(value)
		if normalized != expected {
			t.Errorf("Serial is incorrect, got: %s, want: %s.", normalized, expected)
		}
	}
}
